import React, { createContext, useContext, useEffect, useState } from "react";
import { useAuth } from "./AuthContext";
import {
  getUserProfile,
  updateUserLanguage,
} from "../services/userProfileService";

type Language = "en" | "ja";

interface LanguageContextType {
  language: Language;
  setLanguage: (language: Language) => void;
  t: (key: string) => string;
}

const LanguageContext = createContext<LanguageContextType | undefined>(
  undefined
);

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error("useLanguage must be used within a LanguageProvider");
  }
  return context;
};

interface LanguageProviderProps {
  children: React.ReactNode;
}

// Translation dictionary
const translations = {
  en: {
    language: "Language",
    english: "English",
    japanese: "Japanese",
    select_language: "Select Language",
    home: "Home",
    settings: "Settings",
    ai_chat: "AI Chat",
    maps: "Maps",
    account: "Account",
    logout: "Sign Out",
    cancel: "Cancel",
    save: "Save",
    close: "Close",
    loading: "Loading...",
    error: "Error",
    success: "Success",
    immigration_offices: "Immigration Offices",
    photo_booths: "Photo Booths",
    reset_location: "Reset",
    your_location: "Your Location",
    distance: "Distance",
    directions: "Directions",
    call: "Call",
    ai_welcome:
      "Hello! I'm your AI visa application assistant. I can help you fill out your visa extension form step by step. What would you like to know?",
    ai_loading: "Loading immigration offices...",
    ai_loading_photo: "Loading photo booths...",
    ai_quick_tips: "Here are some quick questions you can ask me:",
    full_name: "Full Name",
    address: "Address",
    date_of_birth: "Date of Birth",
    documents: "Documents",
    full_name_desc: "Please enter your full name",
    address_desc: "Please enter your address",
    date_of_birth_desc: "Please enter your date of birth",
    documents_desc: "Please select the documents you have",
    ask_anything_about_visa: "Ask anything about your visa",
    camera: "Camera",
    image: "Image",
    welcome: "Welcome",
    getting_started_message: "Let's get started with your visa application",
    get_started: "Get Started",
    manage_account: "Manage your account settings",
    customize_experience: "Customize your experience",
    get_help_support: "Get help and support",
    privacy_security_settings: "Privacy and security settings",
    welcome_ai_assistant: "Welcome to AI Form Assistant!",
    what_i_can_help: "‚ú® What I can help you with:",
    form_guidance: "Form Guidance",
    form_guidance_desc: "Get step-by-step help with visa extension forms",
    field_explanations: "Field Explanations",
    field_explanations_desc: "Understand what each field requires",
    how_to_use: "üí° How to use:",
    detailed_explanations: "I'll provide detailed explanations and examples",
    follow_up_questions: "Feel free to ask follow-up questions",
    try_asking_me: "Try asking me:",
    full_name_question: "How do I fill out the full name field?",
    address_format_question: "What format should I use for my address?",
    visa_expiry_question: "Help me with the visa expiry date field",
    lets_start: "Let's start!",
    vizy_ai_assistant: "Vizy AI",
    accessibility: "Accessibility",
    help_support: "Help & Support",
    privacy_security: "Privacy & Security",
    manage_profile_account: "Manage your profile and account settings",
    choose_theme_colors: "Choose your preferred theme and colors",
    get_help_contact_support: "Get help and contact support",
    manage_privacy_security: "Manage your privacy and security settings",
    notification_test: "Notification Test",
    test_push_notifications: "Test push notifications",
    welcome_back: "Welcome back!",
    whats_your_deadline: "What's your deadline?",
    select_your_deadline: "Select your deadline",
    whats_your_current_residency_type: "What's your current Residency type?",
    international_student_residency: "International Student Residency",
    work_residency: "Work Residency",
    family_residency: "Family Residency",
    specified_skill_worker_residency: "Specified Skill Worker Residency",
    what_do_you_want_to_do: "What do you want to do?",
    extend_current_residency: "Extend my current Residency",
    change_to_different_residency_type: "Change to a different Residency type",
    which_documents_do_you_have: "Which documents do you already have?",
    have_you_applied_before: "Have you applied for a Residency before?",
    yes_successfully: "Yes, successfully",
    yes_but_rejected: "Yes, but was rejected",
    no_first_time: "No, this is my first time",
    not_sure: "I'm not sure",
    of: "of",
    back: "Back",
    next: "Next",
    finish: "Finish",
    your_residency_deadline: "Your Residency Deadline",
    no_deadline_set: "No deadline set",
    incomplete_documents: "Incomplete Documents",
    documents_remaining: "documents remaining",
    document_checklist: "Document Checklist",
    save_changes: "Save Changes",
    ai_form: "AI Form",
    set_reminder: "Set Reminder",
    date: "Date",
    time: "Time",
    clear_reminder: "Clear Reminder",
    available_for_submission: "Available for submission",
    not_available_for_submission: "Not available for submission",
    deadline_expired: "Deadline has expired",

    // Document Options
    application_extension_form: "Application Extension Form",
    passport: "Passport",
    residence_card: "Residence Card",
    id_photo: "ID Photo (3x4 cm)",
    processing_fee: "Processing Fee",
    certificate_of_employment: "Certificate of Employment",
    company_registration_certificate: "Company Registration Certificate",
    company_financial_documents: "Company's Financial Documents",
    resident_tax_certificate: "Resident Tax Certificate",
    tax_payment_certificate: "Tax Payment Certificate",
    certificate_of_enrollment: "Certificate of Enrollment",
    academic_transcript: "Academic Transcript",
    bank_balance_certificate: "Bank Balance Certificate",
    scholarship_award_certificate: "Scholarship Award Certificate",
    certificate_of_remittance: "Certificate of Remittance",
    letter_of_guarantee: "Letter of Guarantee",
    marriage_certificate: "Marriage Certificate",
    birth_certificate: "Birth Certificate",
    bank_statement: "Bank Statement",
    family_register: "Family Register",
    resident_certificate: "Resident Certificate",

    // Conditional Label
    select_target_residency_type: "Select your target Residency type:",

    // Signup Page
    create_account: "Create Your Account",
    join_vizy_message: "Join Vizy and start your immigration journey",
    nickname: "Nickname",
    enter_nickname: "Enter your nickname",
    email: "Email",
    enter_email: "Enter your email",
    password: "Password",
    enter_password: "Enter your password",
    confirm_password: "Confirm Password",
    re_enter_password: "Re-enter your password",
    nickname_required: "Nickname is required",
    passwords_dont_match: "Passwords do not match",
    password_too_short: "Password must be at least 6 characters long",
    must_agree_terms: "You must agree to the Terms of Service",
    failed_create_account: "Failed to create an account",
    failed_google_signup: "Failed to sign up with Google",
    i_agree_to: "I agree to the",
    terms_of_service: "Terms of Service",
    creating_account: "Creating Account...",
    or: "or",
    continue_with_google: "Continue with Google",
    already_have_account: "Already have an account?",
    log_in: "Log in",
    welcome_to_vizy: "Welcome to Vizy",
    your_immigration_assistant: "Your immigration assistant",
    failed_to_login: "Failed to log in",
    failed_google_auth: "Failed to authenticate with Google",
    logging_in: "Logging in...",
    login: "Login",
    dont_have_account: "Don't have an account?",
    sign_up: "Sign up",
    redirecting: "Redirecting...",
    terms_agreement: "By using our service, you agree to the following terms:",
    service_description_title: "Service Description",
    service_description:
      "Vizy is an immigration assistant application designed to help users find immigration offices and photo booths in Japan.",
    user_responsibilities_title: "User Responsibilities",
    you_are_responsible_for: "You are responsible for:",
    providing_accurate_info: "Providing accurate information",
    maintaining_account_security: "Maintaining the security of your account",
    using_service_compliance: "Using the service in compliance with local laws",
    privacy: "Privacy",
    privacy_description:
      "We collect and process your data in accordance with our Privacy Policy. Your personal information is protected and will not be shared with third parties without your consent.",
    limitation_of_liability: "Limitation of Liability",
    liability_description:
      "Vizy provides information for reference purposes only. We are not responsible for any decisions made based on the information provided through our service.",
    changes_to_terms: "Changes to Terms",
    terms_changes_description:
      "We reserve the right to modify these terms at any time. Continued use of the service constitutes acceptance of any changes.",
    last_updated: "Last updated",
    i_understand: "I Understand",
  },
  ja: {
    language: "Ë®ÄË™û",
    english: "English",
    japanese: "Êó•Êú¨Ë™û",
    select_language: "Ë®ÄË™û„ÇíÈÅ∏Êäû",
    home: "„Éõ„Éº„É†",
    settings: "Ë®≠ÂÆö",
    ai_chat: "AI „ÉÅ„É£„ÉÉ„Éà",
    maps: "„Éû„ÉÉ„Éó",
    account: "„Ç¢„Ç´„Ç¶„É≥„Éà",
    logout: "„Çµ„Ç§„É≥„Ç¢„Ç¶„Éà",
    cancel: "„Ç≠„É£„É≥„Çª„É´",
    save: "‰øùÂ≠ò",
    close: "Èñâ„Åò„Çã",
    loading: "Ë™≠„ÅøËæº„Åø‰∏≠...",
    error: "„Ç®„É©„Éº",
    success: "ÊàêÂäü",
    immigration_offices: "ÂÖ•ÁÆ°‰∫ãÂãôÊâÄ",
    photo_booths: "Ë®ºÊòéÂÜôÁúüÊ©ü",
    reset_location: "„É™„Çª„ÉÉ„Éà",
    your_location: "ÁèæÂú®Âú∞",
    distance: "Ë∑ùÈõ¢",
    directions: "„É´„Éº„Éà",
    call: "ÈõªË©±",
    ai_welcome:
      "„Åì„Çì„Å´„Å°„ÅØÔºÅÁßÅ„ÅØ„Éì„Ç∂Áî≥Ë´ã„Ç¢„Ç∑„Çπ„Çø„É≥„Éà„Åß„Åô„ÄÇ„Éì„Ç∂Âª∂Èï∑„Éï„Ç©„Éº„É†„ÅÆË®òÂÖ•„ÇíÊÆµÈöéÁöÑ„Å´„Çµ„Éù„Éº„Éà„Åó„Åæ„Åô„ÄÇ‰Ωï„Åã„ÅîË≥™Âïè„ÅØ„ÅÇ„Çä„Åæ„Åô„ÅãÔºü",
    ai_loading: "ÂÖ•ÁÆ°‰∫ãÂãôÊâÄ„ÇíË™≠„ÅøËæº„Åø‰∏≠...",
    ai_loading_photo: "Ë®ºÊòéÂÜôÁúüÊ©ü„ÇíË™≠„ÅøËæº„Åø‰∏≠...",
    ai_quick_tips: "‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å™Ë≥™Âïè„Çí„Åó„Å¶„ÅÑ„Åü„Å†„Åë„Åæ„ÅôÔºö",
    full_name: "Ê∞èÂêç",
    address: "‰ΩèÊâÄ",
    date_of_birth: "ÁîüÂπ¥ÊúàÊó•",
    documents: "Êõ∏È°û",
    full_name_desc: "Ê∞èÂêç„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
    address_desc: "‰ΩèÊâÄ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
    date_of_birth_desc: "ÁîüÂπ¥ÊúàÊó•„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
    documents_desc: "„ÅäÊåÅ„Å°„ÅÆÊõ∏È°û„ÇíÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
    ask_anything_about_visa: "„Éì„Ç∂„Å´„Å§„ÅÑ„Å¶‰Ωï„Åß„ÇÇËÅû„ÅÑ„Å¶„Åè„Å†„Åï„ÅÑ",
    camera: "„Ç´„É°„É©",
    image: "ÁîªÂÉè",
    welcome: "„Çà„ÅÜ„Åì„Åù",
    getting_started_message: "„Éì„Ç∂Áî≥Ë´ã„ÇíÂßã„ÇÅ„Åæ„Åó„Çá„ÅÜ",
    get_started: "Âßã„ÇÅ„Çã",
    manage_account: "„Ç¢„Ç´„Ç¶„É≥„ÉàË®≠ÂÆö„ÇíÁÆ°ÁêÜ",
    customize_experience: "‰ΩìÈ®ì„Çí„Ç´„Çπ„Çø„Éû„Ç§„Ç∫",
    get_help_support: "„Éò„É´„Éó„Å®„Çµ„Éù„Éº„Éà„ÇíÂèñÂæó",
    privacy_security_settings: "„Éó„É©„Ç§„Éê„Ç∑„Éº„Å®„Çª„Ç≠„É•„É™„ÉÜ„Ç£Ë®≠ÂÆö",
    welcome_ai_assistant: "AI „Éï„Ç©„Éº„É†„Ç¢„Ç∑„Çπ„Çø„É≥„Éà„Å∏„Çà„ÅÜ„Åì„ÅùÔºÅ",
    what_i_can_help: "‚ú® „ÅäÊâã‰ºù„ÅÑ„Åß„Åç„Çã„Åì„Å®Ôºö",
    form_guidance: "„Éï„Ç©„Éº„É†„Ç¨„Ç§„ÉÄ„É≥„Çπ",
    form_guidance_desc: "„Éì„Ç∂Âª∂Èï∑„Éï„Ç©„Éº„É†„ÅÆÊÆµÈöéÁöÑ„Å™„Çµ„Éù„Éº„Éà",
    field_explanations: "„Éï„Ç£„Éº„É´„ÉâË™¨Êòé",
    field_explanations_desc: "ÂêÑ„Éï„Ç£„Éº„É´„Éâ„ÅÆË¶Å‰ª∂„ÇíÁêÜËß£",
    how_to_use: "üí° ‰ΩøÁî®ÊñπÊ≥ïÔºö",
    detailed_explanations: "Ë©≥Á¥∞„Å™Ë™¨Êòé„Å®‰æã„ÇíÊèê‰æõ„Åó„Åæ„Åô",
    follow_up_questions: "ËøΩÂä†„ÅÆË≥™Âïè„ÇíËá™Áî±„Å´„ÅäËÅû„Åç„Åè„Å†„Åï„ÅÑ",
    try_asking_me: "‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å™Ë≥™Âïè„Çí„Åó„Å¶„Åø„Å¶„Åè„Å†„Åï„ÅÑÔºö",
    full_name_question: "Ê∞èÂêç„Éï„Ç£„Éº„É´„Éâ„ÅÆË®òÂÖ•ÊñπÊ≥ï„ÅØÔºü",
    address_format_question: "‰ΩèÊâÄ„ÅÆÂΩ¢Âºè„ÅØ„Å©„ÅÜ„Åô„Çå„Å∞„ÅÑ„ÅÑ„Åß„Åô„ÅãÔºü",
    visa_expiry_question: "„Éì„Ç∂ÊúâÂäπÊúüÈôê„Éï„Ç£„Éº„É´„Éâ„Å´„Å§„ÅÑ„Å¶Êïô„Åà„Å¶„Åè„Å†„Åï„ÅÑ",
    lets_start: "Âßã„ÇÅ„Åæ„Åó„Çá„ÅÜÔºÅ",
    vizy_ai_assistant: "Vizy AI",
    accessibility: "„Ç¢„ÇØ„Çª„Ç∑„Éì„É™„ÉÜ„Ç£",
    help_support: "„Éò„É´„Éó„Å®„Çµ„Éù„Éº„Éà",
    privacy_security: "„Éó„É©„Ç§„Éê„Ç∑„Éº„Å®„Çª„Ç≠„É•„É™„ÉÜ„Ç£",
    manage_profile_account: "„Éó„É≠„Éï„Ç£„Éº„É´„Å®„Ç¢„Ç´„Ç¶„É≥„ÉàË®≠ÂÆö„ÇíÁÆ°ÁêÜ",
    choose_theme_colors: "„ÅäÂ•Ω„Åø„ÅÆ„ÉÜ„Éº„Éû„Å®Ëâ≤„ÇíÈÅ∏Êäû",
    get_help_contact_support: "„Éò„É´„Éó„ÇíÂèñÂæó„Åó„ÄÅ„Çµ„Éù„Éº„Éà„Å´ÈÄ£Áµ°",
    manage_privacy_security: "„Éó„É©„Ç§„Éê„Ç∑„Éº„Å®„Çª„Ç≠„É•„É™„ÉÜ„Ç£Ë®≠ÂÆö„ÇíÁÆ°ÁêÜ",
    notification_test: "ÈÄöÁü•„ÉÜ„Çπ„Éà",
    test_push_notifications: "„Éó„ÉÉ„Ç∑„É•ÈÄöÁü•„Çí„ÉÜ„Çπ„Éà",
    welcome_back: "„Åä„Åã„Åà„Çä„Å™„Åï„ÅÑÔºÅ",
    whats_your_deadline: "ÊúüÈôê„ÅØ„ÅÑ„Å§„Åß„Åô„ÅãÔºü",
    select_your_deadline: "ÊúüÈôê„ÇíÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ",
    whats_your_current_residency_type: "ÁèæÂú®„ÅÆÂú®ÁïôË≥áÊ†º„ÅØ‰Ωï„Åß„Åô„ÅãÔºü",
    international_student_residency: "ÁïôÂ≠¶",
    work_residency: "Â∞±Âä¥",
    family_residency: "ÂÆ∂ÊóèÊªûÂú®",
    specified_skill_worker_residency: "ÁâπÂÆöÊäÄËÉΩ",
    what_do_you_want_to_do: "‰Ωï„Çí„Åó„Åü„ÅÑ„Åß„Åô„ÅãÔºü",
    extend_current_residency: "ÁèæÂú®„ÅÆÂú®ÁïôË≥áÊ†º„ÇíÂª∂Èï∑„Åô„Çã",
    change_to_different_residency_type: "Âà•„ÅÆÂú®ÁïôË≥áÊ†º„Å´Â§âÊõ¥„Åô„Çã",
    which_documents_do_you_have: "„Å©„ÅÆÊõ∏È°û„Çí„ÅäÊåÅ„Å°„Åß„Åô„ÅãÔºü",
    have_you_applied_before: "‰ª•Ââç„Å´Âú®ÁïôË≥áÊ†º„ÅÆÁî≥Ë´ã„Çí„Åó„Åü„Åì„Å®„Åå„ÅÇ„Çä„Åæ„Åô„ÅãÔºü",
    yes_successfully: "„ÅØ„ÅÑ„ÄÅÊàêÂäü„Åó„Åæ„Åó„Åü",
    yes_but_rejected: "„ÅØ„ÅÑ„ÄÅ„Åó„Åã„ÅóÊãíÂê¶„Åï„Çå„Åæ„Åó„Åü",
    no_first_time: "„ÅÑ„ÅÑ„Åà„ÄÅÂàù„ÇÅ„Å¶„Åß„Åô",
    not_sure: "„Çè„Åã„Çä„Åæ„Åõ„Çì",
    of: "/",
    back: "Êàª„Çã",
    next: "Ê¨°„Å∏",
    finish: "ÂÆå‰∫Ü",
    your_residency_deadline: "Âú®ÁïôÊúüÈôê",
    no_deadline_set: "ÊúüÈôê„ÅåË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì",
    incomplete_documents: "Êú™ÂÆå‰∫Ü„ÅÆÊõ∏È°û",
    documents_remaining: "Êõ∏È°û„ÅåÊÆã„Å£„Å¶„ÅÑ„Åæ„Åô",
    document_checklist: "Êõ∏È°û„ÉÅ„Çß„ÉÉ„ÇØ„É™„Çπ„Éà",
    save_changes: "Â§âÊõ¥„Çí‰øùÂ≠ò",
    ai_form: "AI „Éï„Ç©„Éº„É†",
    set_reminder: "„É™„Éû„Ç§„É≥„ÉÄ„Éº„ÇíË®≠ÂÆö",
    date: "Êó•‰ªò",
    time: "ÊôÇÈñì",
    clear_reminder: "„É™„Éû„Ç§„É≥„ÉÄ„Éº„Çí„ÇØ„É™„Ç¢",
    available_for_submission: "ÊèêÂá∫ÂèØËÉΩ",
    not_available_for_submission: "ÊèêÂá∫‰∏çÂèØ",
    deadline_expired: "ÊúüÈôê„ÅåÂàá„Çå„Å¶„ÅÑ„Åæ„Åô",

    // Document Options
    application_extension_form: "Âú®ÁïôÊúüÈñìÊõ¥Êñ∞Ë®±ÂèØÁî≥Ë´ãÊõ∏",
    passport: "„Éë„Çπ„Éù„Éº„Éà",
    residence_card: "Âú®Áïô„Ç´„Éº„Éâ",
    id_photo: "ÂÜôÁúüÔºà3x4cmÔºâ",
    processing_fee: "ÊâãÊï∞Êñô",
    certificate_of_employment: "Âú®ËÅ∑Ë®ºÊòéÊõ∏",
    company_registration_certificate: "‰ºöÁ§æÁôªË®òÁ∞øË¨ÑÊú¨",
    company_financial_documents: "‰ºöÁ§æ„ÅÆË≤°ÂãôÊõ∏È°û",
    resident_tax_certificate: "‰ΩèÊ∞ëÁ®é„ÅÆË™≤Á®éË®ºÊòéÊõ∏",
    tax_payment_certificate: "Á¥çÁ®éË®ºÊòéÊõ∏",
    certificate_of_enrollment: "Âú®Â≠¶Ë®ºÊòéÊõ∏",
    academic_transcript: "ÊàêÁ∏æË®ºÊòéÊõ∏",
    bank_balance_certificate: "ÊÆãÈ´òË®ºÊòéÊõ∏",
    scholarship_award_certificate: "Â•®Â≠¶ÈáëÁµ¶‰ªòË®ºÊòéÊõ∏",
    certificate_of_remittance: "ÈÄÅÈáëË®ºÊòéÊõ∏",
    letter_of_guarantee: "Ë∫´ÂÖÉ‰øùË®ºÊõ∏",
    marriage_certificate: "Â©öÂßªË®ºÊòéÊõ∏",
    birth_certificate: "Âá∫ÁîüË®ºÊòéÊõ∏",
    bank_statement: "ÈäÄË°åÂèñÂºïÊòéÁ¥∞Êõ∏",
    family_register: "Êà∏Á±çË¨ÑÊú¨",
    resident_certificate: "‰ΩèÊ∞ëÁ•®",

    // Conditional Label
    select_target_residency_type: "ÁõÆÊ®ô„ÅÆÂú®ÁïôË≥áÊ†º„ÇíÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºö",

    // Signup Page
    create_account: "„Ç¢„Ç´„Ç¶„É≥„Éà„Çí‰ΩúÊàê",
    join_vizy_message: "Vizy„Å´ÂèÇÂä†„Åó„Å¶ÁßªÊ∞ë„ÅÆÊóÖ„ÇíÂßã„ÇÅ„Åæ„Åó„Çá„ÅÜ",
    nickname: "„Éã„ÉÉ„ÇØ„Éç„Éº„É†",
    enter_nickname: "„Éã„ÉÉ„ÇØ„Éç„Éº„É†„ÇíÂÖ•Âäõ",
    email: "„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ",
    enter_email: "„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„ÇíÂÖ•Âäõ",
    password: "„Éë„Çπ„ÉØ„Éº„Éâ",
    enter_password: "„Éë„Çπ„ÉØ„Éº„Éâ„ÇíÂÖ•Âäõ",
    confirm_password: "„Éë„Çπ„ÉØ„Éº„ÉâÁ¢∫Ë™ç",
    re_enter_password: "„Éë„Çπ„ÉØ„Éº„Éâ„ÇíÂÜçÂÖ•Âäõ",
    nickname_required: "„Éã„ÉÉ„ÇØ„Éç„Éº„É†„ÅØÂøÖÈ†à„Åß„Åô",
    passwords_dont_match: "„Éë„Çπ„ÉØ„Éº„Éâ„Åå‰∏ÄËá¥„Åó„Åæ„Åõ„Çì",
    password_too_short: "„Éë„Çπ„ÉØ„Éº„Éâ„ÅØ6ÊñáÂ≠ó‰ª•‰∏ä„Åß„ÅÇ„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô",
    must_agree_terms: "Âà©Áî®Ë¶èÁ¥Ñ„Å´ÂêåÊÑè„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô",
    failed_create_account: "„Ç¢„Ç´„Ç¶„É≥„Éà„ÅÆ‰ΩúÊàê„Å´Â§±Êïó„Åó„Åæ„Åó„Åü",
    failed_google_signup: "Google„Åß„ÅÆ„Çµ„Ç§„É≥„Ç¢„ÉÉ„Éó„Å´Â§±Êïó„Åó„Åæ„Åó„Åü",
    i_agree_to: "ÁßÅ„ÅØ‰ª•‰∏ã„Å´ÂêåÊÑè„Åó„Åæ„Åô",
    terms_of_service: "Âà©Áî®Ë¶èÁ¥Ñ",
    creating_account: "„Ç¢„Ç´„Ç¶„É≥„Éà‰ΩúÊàê‰∏≠...",
    or: "„Åæ„Åü„ÅØ",
    continue_with_google: "Google„ÅßÁ∂öË°å",
    already_have_account: "„Åô„Åß„Å´„Ç¢„Ç´„Ç¶„É≥„Éà„Çí„ÅäÊåÅ„Å°„Åß„Åô„ÅãÔºü",
    log_in: "„É≠„Ç∞„Ç§„É≥",
    welcome_to_vizy: "Vizy„Å∏„Çà„ÅÜ„Åì„Åù",
    your_immigration_assistant: "„ÅÇ„Å™„Åü„ÅÆÁßªÊ∞ë„Ç¢„Ç∑„Çπ„Çø„É≥„Éà",
    failed_to_login: "„É≠„Ç∞„Ç§„É≥„Å´Â§±Êïó„Åó„Åæ„Åó„Åü",
    failed_google_auth: "Google„Åß„ÅÆË™çË®º„Å´Â§±Êïó„Åó„Åæ„Åó„Åü",
    logging_in: "„É≠„Ç∞„Ç§„É≥‰∏≠...",
    login: "„É≠„Ç∞„Ç§„É≥",
    dont_have_account: "„Ç¢„Ç´„Ç¶„É≥„Éà„Çí„ÅäÊåÅ„Å°„Åß„Å™„ÅÑ„Åß„Åô„ÅãÔºü",
    sign_up: "„Çµ„Ç§„É≥„Ç¢„ÉÉ„Éó",
    redirecting: "„É™„ÉÄ„Ç§„É¨„ÇØ„Éà‰∏≠...",
    terms_agreement:
      "ÂΩì„Çµ„Éº„Éì„Çπ„Çí„ÅîÂà©Áî®„ÅÑ„Åü„Å†„Åè„Åì„Å®„Åß„ÄÅ‰ª•‰∏ã„ÅÆÊù°‰ª∂„Å´ÂêåÊÑè„Åó„Åü„ÇÇ„ÅÆ„Å®„Åø„Å™„Åï„Çå„Åæ„ÅôÔºö",
    service_description_title: "„Çµ„Éº„Éì„ÇπË™¨Êòé",
    service_description:
      "Vizy„ÅØ„ÄÅÊó•Êú¨„ÅÆÂÖ•ÁÆ°‰∫ãÂãôÊâÄ„Å®Ë®ºÊòéÂÜôÁúüÊ©ü„ÇíË¶ã„Å§„Åë„Çã„ÅÆ„ÇíÊîØÊè¥„Åô„ÇãÁßªÊ∞ë„Ç¢„Ç∑„Çπ„Çø„É≥„Éà„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„Åß„Åô„ÄÇ",
    user_responsibilities_title: "„É¶„Éº„Ç∂„Éº„ÅÆË≤¨‰ªª",
    you_are_responsible_for: "‰ª•‰∏ã„ÅÆË≤¨‰ªª„Åå„ÅÇ„Çä„Åæ„ÅôÔºö",
    providing_accurate_info: "Ê≠£Á¢∫„Å™ÊÉÖÂ†±„ÅÆÊèê‰æõ",
    maintaining_account_security: "„Ç¢„Ç´„Ç¶„É≥„Éà„ÅÆ„Çª„Ç≠„É•„É™„ÉÜ„Ç£Á∂≠ÊåÅ",
    using_service_compliance: "Âú∞Âüü„ÅÆÊ≥ïÂæã„Å´Ê∫ñÊã†„Åó„Åü„Çµ„Éº„Éì„Çπ„ÅÆÂà©Áî®",
    privacy: "„Éó„É©„Ç§„Éê„Ç∑„Éº",
    privacy_description:
      "ÂΩìÁ§æ„ÅØ„Éó„É©„Ç§„Éê„Ç∑„Éº„Éù„É™„Ç∑„Éº„Å´Âæì„Å£„Å¶„Éá„Éº„Çø„ÇíÂèéÈõÜ„ÉªÂá¶ÁêÜ„Åó„Åæ„Åô„ÄÇÂÄã‰∫∫ÊÉÖÂ†±„ÅØ‰øùË≠∑„Åï„Çå„ÄÅÂêåÊÑè„Å™„Åó„Å´Á¨¨‰∏âËÄÖ„Å®ÂÖ±Êúâ„Åï„Çå„Çã„Åì„Å®„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ",
    limitation_of_liability: "Ë≤¨‰ªª„ÅÆÂà∂Èôê",
    liability_description:
      "Vizy„ÅØÂèÇËÄÉÊÉÖÂ†±„ÅÆ„Åø„ÇíÊèê‰æõ„Åó„Åæ„Åô„ÄÇÂΩì„Çµ„Éº„Éì„Çπ„ÇíÈÄö„Åò„Å¶Êèê‰æõ„Åï„Çå„ÇãÊÉÖÂ†±„Å´Âü∫„Å•„ÅÑ„Å¶Ë°å„Çè„Çå„ÅüÊ±∫ÂÆö„Å´„Å§„ÅÑ„Å¶„ÄÅÂΩìÁ§æ„ÅØË≤¨‰ªª„ÇíË≤†„ÅÑ„Åæ„Åõ„Çì„ÄÇ",
    changes_to_terms: "Âà©Áî®Ë¶èÁ¥Ñ„ÅÆÂ§âÊõ¥",
    terms_changes_description:
      "ÂΩìÁ§æ„ÅØ„ÅÑ„Å§„Åß„ÇÇ„Åì„Çå„Çâ„ÅÆÊù°‰ª∂„ÇíÂ§âÊõ¥„Åô„ÇãÊ®©Âà©„ÇíÁïô‰øù„Åó„Åæ„Åô„ÄÇ„Çµ„Éº„Éì„Çπ„ÅÆÁ∂ôÁ∂öÂà©Áî®„ÅØ„ÄÅÂ§âÊõ¥„ÅÆÊâøË´æ„ÇíÊßãÊàê„Åó„Åæ„Åô„ÄÇ",
    last_updated: "ÊúÄÁµÇÊõ¥Êñ∞Êó•",
    i_understand: "ÁêÜËß£„Åó„Åæ„Åó„Åü",
  },
};

export const LanguageProvider: React.FC<LanguageProviderProps> = ({
  children,
}) => {
  const [language, setLanguageState] = useState<Language>("en");
  const { currentUser } = useAuth();

  // Load language from localStorage on mount
  useEffect(() => {
    const savedLanguage = localStorage.getItem("vizy-language") as Language;
    if (savedLanguage && (savedLanguage === "en" || savedLanguage === "ja")) {
      setLanguageState(savedLanguage);
    }
  }, []);

  // Load language from Firebase when user is authenticated
  useEffect(() => {
    const loadUserLanguage = async () => {
      if (currentUser) {
        try {
          const profile = await getUserProfile(currentUser.uid);
          if (profile?.language) {
            setLanguageState(profile.language);
            localStorage.setItem("vizy-language", profile.language);
          }
        } catch (error) {
          console.error("Error loading user language:", error);
        }
      }
    };

    loadUserLanguage();
  }, [currentUser]);

  // Save language to localStorage and Firebase when it changes
  const setLanguage = async (newLanguage: Language) => {
    setLanguageState(newLanguage);
    localStorage.setItem("vizy-language", newLanguage);

    // Save to Firebase if user is authenticated
    if (currentUser) {
      try {
        await updateUserLanguage(currentUser.uid, newLanguage);
      } catch (error) {
        console.error("Error saving language to Firebase:", error);
      }
    }
  };

  // Translation function
  const t = (key: string): string => {
    return (translations[language] as Record<string, string>)[key] || key;
  };

  const value = {
    language,
    setLanguage,
    t,
  };

  return (
    <LanguageContext.Provider value={value}>
      {children}
    </LanguageContext.Provider>
  );
};
